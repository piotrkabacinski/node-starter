openapi: 3.0.0
info:
  title: "Hello, node!"
  version: "1.0"
  contact:
    name: Piotr
    email: hello@example.com
    url: "https://exampl.eocm"
  description: An openAPI example for Node.js project
servers:
  - url: "http://localhost:4000"
paths:
  /users:
    parameters: []
    get:
      summary: Get User Info by User ID
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  users:
                    type: array
                    items:
                      $ref: "#/components/schemas/User"
      operationId: get-users-userId
      description: Get all created users
      tags:
        - users
    post:
      summary: ""
      operationId: post-users
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "303":
          description: See Other
      description: Create new user
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
              required:
                - email
      tags:
        - users
  "/users/{id}":
    get:
      summary: ""
      operationId: get-users-id
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
      description: Get specific user details
      tags:
        - users
    delete:
      summary: ""
      operationId: delete-users-id
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
      description: Deletes user and related Todos
      tags:
        - users
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
  /:
    get:
      summary: Root endpoint
      tags:
        - root
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  date_time:
                    type: string
                    format: date-time
                  visits:
                    type: number
                required:
                  - date_time
                  - visits
      operationId: get-root
      description: Get server date and amount of requests to root path
components:
  schemas:
    User:
      title: User
      type: object
      description: User model
      properties:
        id:
          type: number
        email:
          type: string
          format: email
        created_at:
          type: string
          format: date-time
tags:
  - name: root
  - name: users
